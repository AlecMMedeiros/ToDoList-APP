/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.ProjectController;
import controller.TaskController;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import model.Project;
import model.Task;
import util.ButtonColumnCellRender;
import util.DeadlineColumnCellRender;
import util.TaskTableModel;

/**
 *
 * @author alecm
 */
public final class MainJFrame extends javax.swing.JFrame {

    private ProjectController projectController;
    private TaskController taskController;

    public DefaultListModel projectsModel; //Object to store the data for exbition - vincunlated with Jlist
    private TaskTableModel tasksTableModelModel;

    public MainJFrame() throws SQLException {
        initComponents();
        this.setLocationRelativeTo(null);
        

        initDataControllers();
        initModels();
        decorateTaskTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ScroolPaneTasks = new javax.swing.JScrollPane();
        taskTableList = new javax.swing.JTable();
        MainApp = new javax.swing.JPanel();
        Header = new javax.swing.JPanel();
        Title = new javax.swing.JLabel();
        Slogan = new javax.swing.JLabel();
        AddProject = new javax.swing.JPanel();
        titleAdd = new javax.swing.JLabel();
        buttonAddProject = new javax.swing.JLabel();
        AddTask = new javax.swing.JPanel();
        buttonAddtask = new javax.swing.JLabel();
        titleAddTask = new javax.swing.JLabel();
        ProjectMainContainer = new javax.swing.JPanel();
        ProjectListContainer = new javax.swing.JScrollPane();
        ProjectList = new javax.swing.JList<>();
        ProjectTaskContainer = new javax.swing.JPanel();
        TaskListEmpty = new javax.swing.JPanel();
        listIcon = new javax.swing.JLabel();
        textNoTask = new javax.swing.JLabel();
        textClickAddTask = new javax.swing.JLabel();

        ScroolPaneTasks.setBackground(java.awt.Color.white);
        ScroolPaneTasks.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(50, 159, 186)));
        ScroolPaneTasks.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        taskTableList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        taskTableList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Task Name", "Task Description", "Task Completed", "Task Deadline"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        taskTableList.setRowHeight(50);
        taskTableList.setSelectionBackground(new java.awt.Color(50, 159, 186));
        taskTableList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        taskTableList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        taskTableList.setShowGrid(true);
        taskTableList.setShowVerticalLines(false);
        taskTableList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                taskTableListMouseClicked(evt);
            }
        });
        ScroolPaneTasks.setViewportView(taskTableList);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setLocation(new java.awt.Point(0, 0));
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(600, 800));

        MainApp.setBackground(java.awt.Color.white);
        MainApp.setMinimumSize(new java.awt.Dimension(600, 800));

        Header.setBackground(new java.awt.Color(50, 159, 186));

        Title.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        Title.setForeground(new java.awt.Color(255, 255, 255));
        Title.setIcon(new javax.swing.ImageIcon(getClass().getResource("/verificado.png"))); // NOI18N
        Title.setText("ToDo App");
        Title.setIconTextGap(20);

        Slogan.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        Slogan.setForeground(java.awt.Color.white);
        Slogan.setText("Don't you forget about me!");

        javax.swing.GroupLayout HeaderLayout = new javax.swing.GroupLayout(Header);
        Header.setLayout(HeaderLayout);
        HeaderLayout.setHorizontalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Slogan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        HeaderLayout.setVerticalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(Title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Slogan, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        AddProject.setBackground(new java.awt.Color(50, 159, 186));

        titleAdd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        titleAdd.setForeground(java.awt.Color.white);
        titleAdd.setLabelFor(buttonAddProject);
        titleAdd.setText("Add Project");

        buttonAddProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add.png"))); // NOI18N
        buttonAddProject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonAddProjectMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout AddProjectLayout = new javax.swing.GroupLayout(AddProject);
        AddProject.setLayout(AddProjectLayout);
        AddProjectLayout.setHorizontalGroup(
            AddProjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddProjectLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonAddProject)
                .addContainerGap(106, Short.MAX_VALUE))
        );
        AddProjectLayout.setVerticalGroup(
            AddProjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddProjectLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(titleAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddProjectLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonAddProject)
                .addGap(27, 27, 27))
        );

        AddTask.setBackground(new java.awt.Color(50, 159, 186));

        buttonAddtask.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add.png"))); // NOI18N
        buttonAddtask.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonAddtaskMouseClicked(evt);
            }
        });

        titleAddTask.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        titleAddTask.setForeground(java.awt.Color.white);
        titleAddTask.setLabelFor(buttonAddtask);
        titleAddTask.setText("Add Task");

        javax.swing.GroupLayout AddTaskLayout = new javax.swing.GroupLayout(AddTask);
        AddTask.setLayout(AddTaskLayout);
        AddTaskLayout.setHorizontalGroup(
            AddTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddTaskLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleAddTask)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonAddtask)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        AddTaskLayout.setVerticalGroup(
            AddTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddTaskLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(AddTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddTaskLayout.createSequentialGroup()
                        .addComponent(titleAddTask, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddTaskLayout.createSequentialGroup()
                        .addComponent(buttonAddtask)
                        .addGap(27, 27, 27))))
        );

        ProjectMainContainer.setBackground(java.awt.Color.white);
        ProjectMainContainer.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(50, 159, 186)));

        ProjectList.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ProjectList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ProjectList.setFixedCellHeight(30);
        ProjectList.setSelectionBackground(new java.awt.Color(50, 159, 186));
        ProjectList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProjectListMouseClicked(evt);
            }
        });
        ProjectListContainer.setViewportView(ProjectList);

        javax.swing.GroupLayout ProjectMainContainerLayout = new javax.swing.GroupLayout(ProjectMainContainer);
        ProjectMainContainer.setLayout(ProjectMainContainerLayout);
        ProjectMainContainerLayout.setHorizontalGroup(
            ProjectMainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ProjectMainContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ProjectListContainer, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        ProjectMainContainerLayout.setVerticalGroup(
            ProjectMainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ProjectMainContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ProjectListContainer)
                .addContainerGap())
        );

        ProjectTaskContainer.setBackground(java.awt.Color.white);
        ProjectTaskContainer.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(50, 159, 186)));
        ProjectTaskContainer.setLayout(new java.awt.BorderLayout());

        TaskListEmpty.setBackground(java.awt.Color.white);

        listIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lists.png"))); // NOI18N

        textNoTask.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        textNoTask.setForeground(new java.awt.Color(62, 77, 108));
        textNoTask.setText("                             No tasks for now!");
        textNoTask.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        textClickAddTask.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        textClickAddTask.setForeground(new java.awt.Color(62, 77, 108));
        textClickAddTask.setText("                       Click in \"Add Task\" to include a new task");

        javax.swing.GroupLayout TaskListEmptyLayout = new javax.swing.GroupLayout(TaskListEmpty);
        TaskListEmpty.setLayout(TaskListEmptyLayout);
        TaskListEmptyLayout.setHorizontalGroup(
            TaskListEmptyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TaskListEmptyLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(listIcon)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(TaskListEmptyLayout.createSequentialGroup()
                .addContainerGap(140, Short.MAX_VALUE)
                .addGroup(TaskListEmptyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(textClickAddTask, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textNoTask, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(141, Short.MAX_VALUE))
        );
        TaskListEmptyLayout.setVerticalGroup(
            TaskListEmptyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TaskListEmptyLayout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(listIcon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textNoTask)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textClickAddTask)
                .addContainerGap(283, Short.MAX_VALUE))
        );

        ProjectTaskContainer.add(TaskListEmpty, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout MainAppLayout = new javax.swing.GroupLayout(MainApp);
        MainApp.setLayout(MainAppLayout);
        MainAppLayout.setHorizontalGroup(
            MainAppLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(MainAppLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainAppLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(AddProject, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ProjectMainContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MainAppLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddTask, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ProjectTaskContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        MainAppLayout.setVerticalGroup(
            MainAppLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainAppLayout.createSequentialGroup()
                .addComponent(Header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MainAppLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddProject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddTask, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MainAppLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ProjectMainContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ProjectTaskContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainApp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainApp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAddtaskMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAddtaskMouseClicked
        // TODO add your handling code here:
        InsertTaskFrame insertTaskFrame = new InsertTaskFrame(this, rootPaneCheckingEnabled);

        int projectIndex = ProjectList.getSelectedIndex();
        Project project = (Project) projectsModel.get(projectIndex);

        insertTaskFrame.setProject(project);

        insertTaskFrame.setVisible(true);        
        insertTaskFrame.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent event) {
                try {
                    loadTasks(project.getId());
                } catch (SQLException ex) {
                    Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }//GEN-LAST:event_buttonAddtaskMouseClicked

    private void buttonAddProjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAddProjectMouseClicked

        InsertProjectFrame insertProjectFrame = new InsertProjectFrame(this, rootPaneCheckingEnabled);
        insertProjectFrame.setVisible(true);

        insertProjectFrame.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent event) {
                try {
                    loadProjects();
                } catch (SQLException ex) {
                    Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }//GEN-LAST:event_buttonAddProjectMouseClicked

    private void taskTableListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_taskTableListMouseClicked
        int rowIndex = taskTableList.rowAtPoint(evt.getPoint());
        int columnIndex = taskTableList.columnAtPoint(evt.getPoint());
        Task task = tasksTableModelModel.getTasks().get(rowIndex);

        switch (columnIndex) {

            case 2 -> {
                try {
                    taskController.update(task);
                } catch (SQLException exception) {
                    Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, exception);
                } catch (ParseException ex) {
                Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            }
            case 4 -> {
                break;
            }
            case 5 -> {
                try {
                    taskController.removeById(task.getId());
                    loadTasks(this.getSelectedProject());
                } catch (SQLException exception) {
                    Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, exception);
                }

            }
        }

    }//GEN-LAST:event_taskTableListMouseClicked

    private void ProjectListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProjectListMouseClicked
        // TODO add your handling code here:
        try {
            loadTasks(this.getSelectedProject());

        } catch (SQLException exception) {
            Logger.getLogger(MainJFrame.class
                    .getName()).log(Level.SEVERE, null, exception);
        }


    }//GEN-LAST:event_ProjectListMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Java swing".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new MainJFrame().setVisible(true);

            } catch (SQLException ex) {
                Logger.getLogger(MainJFrame.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddProject;
    private javax.swing.JPanel AddTask;
    private javax.swing.JPanel Header;
    private javax.swing.JPanel MainApp;
    private javax.swing.JList<String> ProjectList;
    private javax.swing.JScrollPane ProjectListContainer;
    private javax.swing.JPanel ProjectMainContainer;
    private javax.swing.JPanel ProjectTaskContainer;
    private javax.swing.JScrollPane ScroolPaneTasks;
    private javax.swing.JLabel Slogan;
    private javax.swing.JPanel TaskListEmpty;
    private javax.swing.JLabel Title;
    private javax.swing.JLabel buttonAddProject;
    private javax.swing.JLabel buttonAddtask;
    private javax.swing.JLabel listIcon;
    private javax.swing.JTable taskTableList;
    private javax.swing.JLabel textClickAddTask;
    private javax.swing.JLabel textNoTask;
    private javax.swing.JLabel titleAdd;
    private javax.swing.JLabel titleAddTask;
    // End of variables declaration//GEN-END:variables
    public void decorateTaskTable() {
        taskTableList.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
        taskTableList.getTableHeader().setBackground(new Color(50, 159, 186));
        taskTableList.getTableHeader().setForeground(new Color(255, 255, 255));

        taskTableList.getColumnModel().getColumn(3).setCellRenderer(new DeadlineColumnCellRender());
        taskTableList.getColumnModel().getColumn(4).setCellRenderer(new ButtonColumnCellRender("edit"));
        taskTableList.getColumnModel().getColumn(5).setCellRenderer(new ButtonColumnCellRender("delete"));

        taskTableList.setAutoCreateRowSorter(true);
    }

    public void initDataControllers() {
        projectController = new ProjectController();
        taskController = new TaskController();
    }

    public void initModels() throws SQLException {

        try {
            projectsModel = new DefaultListModel();
            loadProjects(); // Loading projects 

            tasksTableModelModel = new TaskTableModel();
            taskTableList.setModel(tasksTableModelModel); //Loading tasks
            if (!projectsModel.isEmpty()) {
                ProjectList.setSelectedIndex(0);
                loadTasks(this.getSelectedProject());
            }

        } catch (SQLException exception) {
            throw new SQLException("Runtime Erro On Loading List Models: " + exception.getMessage(), exception);
        }
    }

    public void loadProjects() throws SQLException {
        try {
            List<Project> projects = projectController.getAll();
            projectsModel.clear();

            for (int index = 0; index < projects.size(); index += 1) {
                Project project = projects.get(index);

                projectsModel.addElement(project);
                ProjectList.setModel(projectsModel);
            }
        } catch (SQLException exception) {
            throw new SQLException("Connection Error On Loading Project List: " + exception.getMessage(), exception);
        }
    }

    public void loadTasks(int idProject) throws SQLException {
        try {
            List<Task> tasks = taskController.getAll(idProject);
            tasksTableModelModel.setTasks(tasks);

            showProjectTasks(!tasks.isEmpty());
        } catch (SQLException exception) {
            throw new SQLException("Connection Error On Loading Tasks List: " + exception.getMessage(), exception);
        }
    }

    private void showProjectTasks(boolean hasTasks) {
        if (hasTasks) {
            if (TaskListEmpty.isVisible()) {
                TaskListEmpty.setVisible(false);
                ProjectTaskContainer.remove(TaskListEmpty);
            }
            ProjectTaskContainer.add(ScroolPaneTasks);
            ScroolPaneTasks.setVisible(true);
            ScroolPaneTasks.setSize(ProjectTaskContainer.getWidth(), ProjectTaskContainer.getHeight());
        } else {
            if (ScroolPaneTasks.isVisible()) {
                ScroolPaneTasks.setVisible(false);
                ProjectTaskContainer.remove(ScroolPaneTasks);
            }
            ProjectTaskContainer.add(TaskListEmpty);
            TaskListEmpty.setVisible(true);
        }
    }

    public int getSelectedProject() {
        int projectIndex = ProjectList.getSelectedIndex();
        Project project = (Project) projectsModel.get(projectIndex);

        return project.getId();
    }

}
